// Generated by view binder compiler. Do not edit!
package it.omarkiarafederico.skitracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import it.omarkiarafederico.skitracker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentInfoPisteBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView altMax;

  @NonNull
  public final TextView altMaxIndicator;

  @NonNull
  public final TextView altMin;

  @NonNull
  public final TextView altMinIndicator;

  @NonNull
  public final TextView impiantiRisalita;

  @NonNull
  public final TextView numImpiantiIndicator;

  @NonNull
  public final TextView numPiste;

  @NonNull
  public final TextView numPisteIndicator;

  @NonNull
  public final TextView pisteDisponibili;

  @NonNull
  public final TextView pisteNotturne;

  @NonNull
  public final RecyclerView pisteRecyclerView;

  @NonNull
  public final ConstraintLayout skiAreaInfoFragmentLayout;

  @NonNull
  public final TextView snowpark;

  @NonNull
  public final TextView stato;

  @NonNull
  public final TextView titolo;

  @NonNull
  public final TextView website;

  private FragmentInfoPisteBinding(@NonNull ConstraintLayout rootView, @NonNull TextView altMax,
      @NonNull TextView altMaxIndicator, @NonNull TextView altMin,
      @NonNull TextView altMinIndicator, @NonNull TextView impiantiRisalita,
      @NonNull TextView numImpiantiIndicator, @NonNull TextView numPiste,
      @NonNull TextView numPisteIndicator, @NonNull TextView pisteDisponibili,
      @NonNull TextView pisteNotturne, @NonNull RecyclerView pisteRecyclerView,
      @NonNull ConstraintLayout skiAreaInfoFragmentLayout, @NonNull TextView snowpark,
      @NonNull TextView stato, @NonNull TextView titolo, @NonNull TextView website) {
    this.rootView = rootView;
    this.altMax = altMax;
    this.altMaxIndicator = altMaxIndicator;
    this.altMin = altMin;
    this.altMinIndicator = altMinIndicator;
    this.impiantiRisalita = impiantiRisalita;
    this.numImpiantiIndicator = numImpiantiIndicator;
    this.numPiste = numPiste;
    this.numPisteIndicator = numPisteIndicator;
    this.pisteDisponibili = pisteDisponibili;
    this.pisteNotturne = pisteNotturne;
    this.pisteRecyclerView = pisteRecyclerView;
    this.skiAreaInfoFragmentLayout = skiAreaInfoFragmentLayout;
    this.snowpark = snowpark;
    this.stato = stato;
    this.titolo = titolo;
    this.website = website;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentInfoPisteBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentInfoPisteBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_info_piste, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentInfoPisteBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.altMax;
      TextView altMax = ViewBindings.findChildViewById(rootView, id);
      if (altMax == null) {
        break missingId;
      }

      id = R.id.altMaxIndicator;
      TextView altMaxIndicator = ViewBindings.findChildViewById(rootView, id);
      if (altMaxIndicator == null) {
        break missingId;
      }

      id = R.id.altMin;
      TextView altMin = ViewBindings.findChildViewById(rootView, id);
      if (altMin == null) {
        break missingId;
      }

      id = R.id.altMinIndicator;
      TextView altMinIndicator = ViewBindings.findChildViewById(rootView, id);
      if (altMinIndicator == null) {
        break missingId;
      }

      id = R.id.impiantiRisalita;
      TextView impiantiRisalita = ViewBindings.findChildViewById(rootView, id);
      if (impiantiRisalita == null) {
        break missingId;
      }

      id = R.id.numImpiantiIndicator;
      TextView numImpiantiIndicator = ViewBindings.findChildViewById(rootView, id);
      if (numImpiantiIndicator == null) {
        break missingId;
      }

      id = R.id.numPiste;
      TextView numPiste = ViewBindings.findChildViewById(rootView, id);
      if (numPiste == null) {
        break missingId;
      }

      id = R.id.numPisteIndicator;
      TextView numPisteIndicator = ViewBindings.findChildViewById(rootView, id);
      if (numPisteIndicator == null) {
        break missingId;
      }

      id = R.id.piste_disponibili;
      TextView pisteDisponibili = ViewBindings.findChildViewById(rootView, id);
      if (pisteDisponibili == null) {
        break missingId;
      }

      id = R.id.piste_notturne;
      TextView pisteNotturne = ViewBindings.findChildViewById(rootView, id);
      if (pisteNotturne == null) {
        break missingId;
      }

      id = R.id.piste_recycler_view;
      RecyclerView pisteRecyclerView = ViewBindings.findChildViewById(rootView, id);
      if (pisteRecyclerView == null) {
        break missingId;
      }

      ConstraintLayout skiAreaInfoFragmentLayout = (ConstraintLayout) rootView;

      id = R.id.snowpark;
      TextView snowpark = ViewBindings.findChildViewById(rootView, id);
      if (snowpark == null) {
        break missingId;
      }

      id = R.id.stato;
      TextView stato = ViewBindings.findChildViewById(rootView, id);
      if (stato == null) {
        break missingId;
      }

      id = R.id.titolo;
      TextView titolo = ViewBindings.findChildViewById(rootView, id);
      if (titolo == null) {
        break missingId;
      }

      id = R.id.website;
      TextView website = ViewBindings.findChildViewById(rootView, id);
      if (website == null) {
        break missingId;
      }

      return new FragmentInfoPisteBinding((ConstraintLayout) rootView, altMax, altMaxIndicator,
          altMin, altMinIndicator, impiantiRisalita, numImpiantiIndicator, numPiste,
          numPisteIndicator, pisteDisponibili, pisteNotturne, pisteRecyclerView,
          skiAreaInfoFragmentLayout, snowpark, stato, titolo, website);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
