// Generated by view binder compiler. Do not edit!
package it.omarkiarafederico.skitracker.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.Chronometer;
import android.widget.ImageView;
import android.widget.TableLayout;
import android.widget.TableRow;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import it.omarkiarafederico.skitracker.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import org.osmdroid.views.MapView;

public final class FragmentTrackingBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView trackDistance;

  @NonNull
  public final ImageView trackDistanceIcon;

  @NonNull
  public final TableRow trackDistanceRow;

  @NonNull
  public final TableRow trackPistaDetailRow;

  @NonNull
  public final TextView trackPistaDifficulty;

  @NonNull
  public final TextView trackPistaName;

  @NonNull
  public final TextView trackSpeed;

  @NonNull
  public final ImageView trackSpeedIcon;

  @NonNull
  public final TableRow trackSpeedRow;

  @NonNull
  public final Chronometer trackTime;

  @NonNull
  public final ImageView trackTimeIcon;

  @NonNull
  public final TableRow trackTimeRow;

  @NonNull
  public final Button trackingFragmentCancelBtn;

  @NonNull
  public final Button trackingFragmentEndBtn;

  @NonNull
  public final ConstraintLayout trackingFragmentLinearLayout;

  @NonNull
  public final TableLayout trackingFragmentTableLayout;

  @NonNull
  public final MapView trackingMap;

  private FragmentTrackingBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextView trackDistance, @NonNull ImageView trackDistanceIcon,
      @NonNull TableRow trackDistanceRow, @NonNull TableRow trackPistaDetailRow,
      @NonNull TextView trackPistaDifficulty, @NonNull TextView trackPistaName,
      @NonNull TextView trackSpeed, @NonNull ImageView trackSpeedIcon,
      @NonNull TableRow trackSpeedRow, @NonNull Chronometer trackTime,
      @NonNull ImageView trackTimeIcon, @NonNull TableRow trackTimeRow,
      @NonNull Button trackingFragmentCancelBtn, @NonNull Button trackingFragmentEndBtn,
      @NonNull ConstraintLayout trackingFragmentLinearLayout,
      @NonNull TableLayout trackingFragmentTableLayout, @NonNull MapView trackingMap) {
    this.rootView = rootView;
    this.trackDistance = trackDistance;
    this.trackDistanceIcon = trackDistanceIcon;
    this.trackDistanceRow = trackDistanceRow;
    this.trackPistaDetailRow = trackPistaDetailRow;
    this.trackPistaDifficulty = trackPistaDifficulty;
    this.trackPistaName = trackPistaName;
    this.trackSpeed = trackSpeed;
    this.trackSpeedIcon = trackSpeedIcon;
    this.trackSpeedRow = trackSpeedRow;
    this.trackTime = trackTime;
    this.trackTimeIcon = trackTimeIcon;
    this.trackTimeRow = trackTimeRow;
    this.trackingFragmentCancelBtn = trackingFragmentCancelBtn;
    this.trackingFragmentEndBtn = trackingFragmentEndBtn;
    this.trackingFragmentLinearLayout = trackingFragmentLinearLayout;
    this.trackingFragmentTableLayout = trackingFragmentTableLayout;
    this.trackingMap = trackingMap;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentTrackingBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentTrackingBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_tracking, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentTrackingBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.trackDistance;
      TextView trackDistance = ViewBindings.findChildViewById(rootView, id);
      if (trackDistance == null) {
        break missingId;
      }

      id = R.id.trackDistanceIcon;
      ImageView trackDistanceIcon = ViewBindings.findChildViewById(rootView, id);
      if (trackDistanceIcon == null) {
        break missingId;
      }

      id = R.id.trackDistanceRow;
      TableRow trackDistanceRow = ViewBindings.findChildViewById(rootView, id);
      if (trackDistanceRow == null) {
        break missingId;
      }

      id = R.id.trackPistaDetailRow;
      TableRow trackPistaDetailRow = ViewBindings.findChildViewById(rootView, id);
      if (trackPistaDetailRow == null) {
        break missingId;
      }

      id = R.id.trackPistaDifficulty;
      TextView trackPistaDifficulty = ViewBindings.findChildViewById(rootView, id);
      if (trackPistaDifficulty == null) {
        break missingId;
      }

      id = R.id.trackPistaName;
      TextView trackPistaName = ViewBindings.findChildViewById(rootView, id);
      if (trackPistaName == null) {
        break missingId;
      }

      id = R.id.trackSpeed;
      TextView trackSpeed = ViewBindings.findChildViewById(rootView, id);
      if (trackSpeed == null) {
        break missingId;
      }

      id = R.id.trackSpeedIcon;
      ImageView trackSpeedIcon = ViewBindings.findChildViewById(rootView, id);
      if (trackSpeedIcon == null) {
        break missingId;
      }

      id = R.id.trackSpeedRow;
      TableRow trackSpeedRow = ViewBindings.findChildViewById(rootView, id);
      if (trackSpeedRow == null) {
        break missingId;
      }

      id = R.id.trackTime;
      Chronometer trackTime = ViewBindings.findChildViewById(rootView, id);
      if (trackTime == null) {
        break missingId;
      }

      id = R.id.trackTimeIcon;
      ImageView trackTimeIcon = ViewBindings.findChildViewById(rootView, id);
      if (trackTimeIcon == null) {
        break missingId;
      }

      id = R.id.trackTimeRow;
      TableRow trackTimeRow = ViewBindings.findChildViewById(rootView, id);
      if (trackTimeRow == null) {
        break missingId;
      }

      id = R.id.trackingFragmentCancelBtn;
      Button trackingFragmentCancelBtn = ViewBindings.findChildViewById(rootView, id);
      if (trackingFragmentCancelBtn == null) {
        break missingId;
      }

      id = R.id.trackingFragmentEndBtn;
      Button trackingFragmentEndBtn = ViewBindings.findChildViewById(rootView, id);
      if (trackingFragmentEndBtn == null) {
        break missingId;
      }

      ConstraintLayout trackingFragmentLinearLayout = (ConstraintLayout) rootView;

      id = R.id.trackingFragmentTableLayout;
      TableLayout trackingFragmentTableLayout = ViewBindings.findChildViewById(rootView, id);
      if (trackingFragmentTableLayout == null) {
        break missingId;
      }

      id = R.id.trackingMap;
      MapView trackingMap = ViewBindings.findChildViewById(rootView, id);
      if (trackingMap == null) {
        break missingId;
      }

      return new FragmentTrackingBinding((ConstraintLayout) rootView, trackDistance,
          trackDistanceIcon, trackDistanceRow, trackPistaDetailRow, trackPistaDifficulty,
          trackPistaName, trackSpeed, trackSpeedIcon, trackSpeedRow, trackTime, trackTimeIcon,
          trackTimeRow, trackingFragmentCancelBtn, trackingFragmentEndBtn,
          trackingFragmentLinearLayout, trackingFragmentTableLayout, trackingMap);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
